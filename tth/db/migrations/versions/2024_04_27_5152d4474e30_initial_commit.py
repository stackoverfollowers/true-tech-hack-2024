"""Initial commit

Revision ID: 5152d4474e30
Revises:
Create Date: 2024-04-27 07:51:40.560287

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

revision: str = "5152d4474e30"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None

disability_status_enum = postgresql.ENUM("1", "-1", name="disability_status")
user_type_enum = postgresql.ENUM("ADMIN", "REGULAR", name="user_type")
event_type_enum = postgresql.ENUM('standup', 'concerts', 'exhibitions', 'theater', 'musicals', 'children', 'show',
                                  'festivals', name='event_type')

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "disability",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=256), nullable=False),
        sa.Column("group", sa.String(length=64), nullable=False),
        sa.Column("status", disability_status_enum, nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__disability")),
    )
    op.create_index(
        op.f("ix__disability__group"), "disability", ["group"], unique=False
    )
    op.create_index(op.f("ix__disability__name"), "disability", ["name"], unique=False)
    op.create_table(
        "place",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=256), nullable=False),
        sa.Column("description", sa.String(length=256), nullable=False),
        sa.Column("address", sa.String(length=256), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__place")),
    )
    op.create_index(op.f("ix__place__name"), "place", ["name"], unique=False)
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("type", user_type_enum, nullable=False),
        sa.Column("username", sa.String(length=256), nullable=False),
        sa.Column("password_hash", sa.String(length=256), nullable=False),
        sa.Column(
            "properties",
            postgresql.JSONB(astext_type=sa.Text()),
            server_default="{}",
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__user")),
    )
    op.create_index(op.f("ix__user__type"), "user", ["type"], unique=False)
    op.create_index(op.f("ix__user__username"), "user", ["username"], unique=True)
    op.create_table(
        "event",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("place_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=256), nullable=False),
        sa.Column('event_type',
                  event_type_enum,
                  nullable=True),
        sa.Column("description", sa.String(length=256), nullable=False),
        sa.Column("started_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("ended_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["place_id"], ["place.id"], name=op.f("fk__event__place_id__place")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__event")),
    )
    op.create_index(op.f("ix__event__ended_at"), "event", ["ended_at"], unique=False)
    op.create_index(op.f("ix__event__name"), "event", ["name"], unique=False)
    op.create_index(op.f("ix__event__place_id"), "event", ["place_id"], unique=False)
    op.create_index(
        op.f("ix__event__started_at"), "event", ["started_at"], unique=False
    )
    op.create_table(
        "place_disability",
        sa.Column("place_id", sa.Integer(), nullable=False),
        sa.Column("disability_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["disability_id"],
            ["disability.id"],
            name=op.f("fk__place_disability__disability_id__disability"),
        ),
        sa.ForeignKeyConstraint(
            ["place_id"],
            ["place.id"],
            name=op.f("fk__place_disability__place_id__place"),
        ),
        sa.PrimaryKeyConstraint(
            "place_id", "disability_id", name=op.f("pk__place_disability")
        ),
    )
    op.create_index(
        op.f("ix__place_disability__disability_id"),
        "place_disability",
        ["disability_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix__place_disability__place_id"),
        "place_disability",
        ["place_id"],
        unique=False,
    )
    op.create_table(
        "user_disability",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("disability_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["disability_id"],
            ["disability.id"],
            name=op.f("fk__user_disability__disability_id__disability"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], name=op.f("fk__user_disability__user_id__user")
        ),
        sa.PrimaryKeyConstraint(
            "user_id", "disability_id", name=op.f("pk__user_disability")
        ),
    )
    op.create_index(
        op.f("ix__user_disability__disability_id"),
        "user_disability",
        ["disability_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix__user_disability__user_id"),
        "user_disability",
        ["user_id"],
        unique=False,
    )
    op.create_table(
        "event_disability",
        sa.Column("event_id", sa.Integer(), nullable=False),
        sa.Column("disability_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["disability_id"],
            ["disability.id"],
            name=op.f("fk__event_disability__disability_id__disability"),
        ),
        sa.ForeignKeyConstraint(
            ["event_id"],
            ["event.id"],
            name=op.f("fk__event_disability__event_id__event"),
        ),
        sa.PrimaryKeyConstraint(
            "event_id", "disability_id", name=op.f("pk__event_disability")
        ),
    )
    op.create_index(
        op.f("ix__event_disability__disability_id"),
        "event_disability",
        ["disability_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix__event_disability__event_id"),
        "event_disability",
        ["event_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix__event_disability__event_id"), table_name="event_disability")
    op.drop_index(
        op.f("ix__event_disability__disability_id"), table_name="event_disability"
    )
    op.drop_table("event_disability")
    op.drop_index(op.f("ix__user_disability__user_id"), table_name="user_disability")
    op.drop_index(
        op.f("ix__user_disability__disability_id"), table_name="user_disability"
    )
    op.drop_table("user_disability")
    op.drop_index(op.f("ix__place_disability__place_id"), table_name="place_disability")
    op.drop_index(
        op.f("ix__place_disability__disability_id"), table_name="place_disability"
    )
    op.drop_table("place_disability")
    op.drop_index(op.f("ix__event__started_at"), table_name="event")
    op.drop_index(op.f("ix__event__place_id"), table_name="event")
    op.drop_index(op.f("ix__event__name"), table_name="event")
    op.drop_index(op.f("ix__event__ended_at"), table_name="event")
    op.drop_table("event")
    op.drop_index(op.f("ix__user__username"), table_name="user")
    op.drop_index(op.f("ix__user__type"), table_name="user")
    op.drop_table("user")
    op.drop_index(op.f("ix__place__name"), table_name="place")
    op.drop_table("place")
    op.drop_index(op.f("ix__disability__name"), table_name="disability")
    op.drop_index(op.f("ix__disability__group"), table_name="disability")
    op.drop_table("disability")

    bind = op.get_bind()
    user_type_enum.drop(bind)
    disability_status_enum.drop(bind)
    event_type_enum.drop(bind)
    # ### end Alembic commands ###
